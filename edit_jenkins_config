#!/usr/bin/env python

import argparse
import xml.etree.ElementTree as ET
from xml.dom import minidom

def prettify(elem):
    rough_string = ET.tostring(elem, 'utf-8')
    reparsed = minidom.parseString(rough_string)
    return reparsed.toprettyxml(indent='  ')

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='helper script to initialize config.xml')
    parser.add_argument('path', metavar='PATH', help='path to input file')
    parser.add_argument('--allowAnonymous', \
            action='store_true', \
            default = False, \
            help='allow anonymous to read access.')

    args = parser.parse_args()
    
    tree = ET.parse(args.path)
    root = tree.getroot()

    nodes = root.findall('authorizationStrategy')

    for node in nodes:
        vals = node.findall('denyAnonymousReadAccess')
        if args.allowAnonymous:
            for val in vals:
                node.remove(val)
            node.set('class','hudson.security.AuthorizationStrategy$Unsecured')
            node.text = ''
        else:
            if len(vals) == 0:
                node.set('class', 'hudson.security.FullControlOnceLoggedInAuthorizationStrategy')
                subNode = ET.SubElement(node, 'denyAnonymousReadAccess')
                subNode.text = 'true'
            else:
                for val in vals:
                    val.text = 'true'

    nodes = root.findall('slaveAgentPort')

    for node in nodes:
        node.text = '0'

    tree.write(args.path,encoding='UTF-8')
